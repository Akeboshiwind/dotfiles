# gpg.conf


# >> Notes

# This is written with guidance from muliple sources:
# - https://riseup.net/en/security/message-security/openpgp/best-practices
#   - At the time of writing, updating the article for 2.1 was not complete but
#     notes were included at: https://github.com/riseupnet/riseup_help/issues/451
# - https://github.com/jessfraz/dotfiles/blob/master/.gnupg/gpg.conf



# >> Behavior

# Disable version string in ASCII armored output
no-emit-version

# Disable comment strings in clear text signatures and ASCII armored messages
no-comments

# Short keyIDs can be bruteforced and so are insecure (30s in 2014)
keyid-format                  0xlong

# Make sure to check the full fingerprint
with-fingerprint

# Use web of trust as well as tofu
# Tofu monitors changes in keys to make sure you aren't being MITM'ed
trust-model                   tofu+pgp

# Display the calculated validity of user IDs during key listings
list-options                  show-uid-validity
verify-options                show-uid-validity

# Try to use the GnuPG-Agent. With this option, GnuPG first tries to connect to
# the agent before it asks for a passphrase.
use-agent

charset                       utf-8
fixed-list-mode
require-cross-certification



# >> Keyserver

# If an imported key specifies a keyserver, don't use it
# This is useful because:
# - It prevents someone from designating an insecure method for pulling thier key
# - If the server designated uses hkps, the refresh will fail because the ca-cert
#   will not match, so the keys will never be refreshed
keyserver-options             no-honor-keyserver-url

# When using --search-keys include keys marked as revoked
keyserver-options             include-revoked



# >> Algorithm and Ciphers

# List of personal digest preferences. When multiple digests are supported by
# all recipients, choose the strongest one
personal-cipher-preferences   AES256 AES192 AES CAST5

# List of personal digest preferences. When multiple ciphers are supported by
# all recipients, choose the strongest one
personal-digest-preferences   SHA512 SHA384 SHA256 SHA224

# Message digest algorithm used when signing a key
cert-digest-algo              SHA512
s2k-cipher-algo               AES256
s2k-digest-algo               SHA512

# This preference list is used for new keys and becomes the default for
# "setpref" in the edit menu
default-preference-list       SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed
